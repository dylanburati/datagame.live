version: 2.1
jobs:
  react-native-test:
    docker:
      - image: cimg/node:18.8

    steps:
      - checkout
      - run:
          name: Move expo out to project directory
          command: |
            find -maxdepth 1 '!' -name expo '!' -name '.*' -execdir rm -rf '{}' ';' &&
            mv expo/* ./
      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      - run: yarn install
      - run: yarn test
      - run: yarn tsc

      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

  macos-build-and-deploy:
    macos:
      xcode: 14.3.0
    environment:
      FL_OUTPUT_DIR: output
      GEM_HOME: ~/.ruby

    steps:
      - checkout
      - run:
          name: Move expo out to project directory
          command: |
            find -maxdepth 1 '!' -name expo '!' -name '.*' -execdir rm -rf '{}' ';' &&
            mv expo/* ./
      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      - run: yarn install
      - run: npx expo prebuild

      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules
      - restore_cache:
          key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}
      - restore_cache:
          key: pods-v1-{{ checksum "ios/Podfile.lock" }}-{{ arch }}

      - run: cp -r fastlane/ios/* ios/
      - run: mkdir ~/.ruby
      - run:
          command: PATH="$PATH:~/.ruby/bin" bundle install
          working_directory: ios
      - run:
          command: pod install
          working_directory: ios

      - save_cache:
          key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle
      - save_cache:
          key: pods-v1-{{ checksum "ios/Podfile.lock" }}-{{ arch }}
          paths:
            - ios/Pods
      - run:
          name: Fastlane deploy TestFlight
          command: PATH="$PATH:~/.ruby/bin" ./fastlane/deploy.sh
          working_directory: ios

  android-build-and-deploy:
    docker:
      - image: cimg/android:2022.08-node
    steps:
      - checkout
      - run:
          name: Move expo out to project directory
          command: |
            find -maxdepth 1 '!' -name expo '!' -name '.*' -execdir rm -rf '{}' ';' &&
            mv expo/* ./
      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      - run: yarn install
      - run: npx expo prebuild

      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules
      - restore_cache:
          key: bundle-v1-{{ checksum "android/Gemfile.lock" }}-{{ arch }}

      - run: cp -r fastlane/android/* android/
      - run: mkdir ~/.ruby
      - run:
          command: PATH="$PATH:~/.ruby/bin" bundle install
          working_directory: android

      - save_cache:
          key: bundle-v1-{{ checksum "android/Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle
      - run:
          name: Fastlane deploy beta
          working_directory: android
          command: PATH="$PATH:~/.ruby/bin" ./fastlane/deploy.sh

workflows:
  react-native-android-ios:
    jobs:
      - react-native-test
      - approve_deploy_to_apple_app_store:
          type: approval
          requires:
            - react-native-test
      - approve_deploy_to_google_play_store:
          type: approval
          requires:
            - react-native-test
      - android-build-and-deploy:
          requires:
            - approve_deploy_to_google_play_store
      - macos-build-and-deploy:
          requires:
            - approve_deploy_to_apple_app_store

